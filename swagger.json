{
   "apiVersion": "0.1",
   "swaggerVersion": "1.2",
   "basePath": "https://ptah.apps.cloudchalupa.com",
   "resourcePath": "//default",
   "produces": [
      "application/json",
      "text/html"
   ],
   "apis": [
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/streams",
            "display_path": "/api/deployment/{id}/region{id}/controlplane/{id}/streams",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "get streams",
                  "display_path": "/api/deployment/{id}/region{id}/controlplane/{id}/streams",
                  "summary": "Enumerates all the stream names",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Stream  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/streams/{stream_name}/builds",
            "display_path": "/api/deployment/{id}/region{id}/controlplane/{id}/streams/{name}/builds",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "stream_name",
                        "description": "The stream to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "get builds",
                  "display_path": "/api/deployment/{id}/region{id}/controlplane/{id}/streams/{name}/builds",
                  "summary": "Enumerates all the builds within a stream",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Build  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/build/{build_name}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/build/{name}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "build_name",
                        "description": "The build whose status will be updated",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Possible values for build_status: {'Stable', 'Passed AutoBVT', 'Not Tested', 'Failed AutoBVT', 'Blocked AutoBVT', 'BAD'}",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "BuildAttributeRequestModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "setBuild",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/build/{name}",
                  "summary": "Sets build attributes",
                  "notes": null,
                  "responseClass": "BuildModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Build  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     },
                     {
                        "code": 502,
                        "message": "Bad value from forge"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/build",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/build",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "getProductionBuild",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/build",
                  "summary": "Gets the current production build",
                  "notes": null,
                  "responseClass": "BuildModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Build  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/bvtbuild",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/bvtbuild",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Must be production)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "The name of bvt preupgrade build",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "PreupgradeBuildModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "setPreUpgradeBuild",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/bvtbuild",
                  "summary": "Set BVT preupgrade build",
                  "notes": null,
                  "responseClass": "BuildModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 502,
                        "message": "Bad gateway"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/build",
            "display_path": "/api/deployment/{id}/build",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "patch",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Must be production)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "The stable and canary production builds to use for new onboards. Example: {\"stable_production_build\": \"release-cloud80-DDC-45\", \"canary_production_build\": \"release-cloud81-DDC-10\", \"current_rollout_canary_group\": \"opt_in\"}",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "ProductionBuildModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "setProductionBuild",
                  "display_path": "/api/deployment/{id}/build",
                  "summary": "Sets the production and canary production builds",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Request Body"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Build  not found"
                     },
                     {
                        "code": 502,
                        "message": "Bad value from forge"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/container/desiredstate",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/container/desiredstate",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "Deployment ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Control Plane ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "Customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "template_version",
                        "description": "Template Version",
                        "required": true,
                        "defaultValue": "1.0",
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "etag",
                        "description": "ETag",
                        "required": true,
                        "defaultValue": "dummy",
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "getDesiredState",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/container/desiredstate",
                  "summary": "Get the desired state of containerized FMA services for a customer",
                  "notes": null,
                  "responseClass": "GetContainerStateResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Control plane Not Found"
                     }
                  ]
               },
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "Deployment ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Control Plane ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "Customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Desired state of the containers",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "SetContainerStateBatchModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "setDesiredState",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/container/desiredstate",
                  "summary": "Set the desired state of containerized FMA services for a customer",
                  "notes": null,
                  "responseClass": [],
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Control plane Not Found"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to describe",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "get",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}",
                  "summary": "Describe a Control Plane",
                  "notes": null,
                  "responseClass": "ControlPlaneModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access, azure style Eg. eastus",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane",
                  "summary": "Enumerates all Control Planes",
                  "notes": null,
                  "responseClass": "ControlPlaneListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region}  not found"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer",
                  "summary": "Enumerates the customers within a control plane",
                  "notes": null,
                  "responseClass": "CustomerListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Delete/Decommissioning call details. Specify the operation type to be performed. Supported values are - \"decommission\" | \"fast_decommission\". Example - {\"operation_type\": \"decommission\"}",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "CustomerDeleteModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "delete",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}",
                  "summary": "Deletes/Decommissions a customer",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               },
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "describe",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}",
                  "summary": "Describes a particular customer",
                  "notes": null,
                  "responseClass": "CustomerModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/recommission",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/recommission",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "recommission",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/recommission",
                  "summary": "Recommission a decommissioned customer",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/properties",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/properties",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "patch",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Create command details and arguments",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "CustomerPatchModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "properties",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/properties",
                  "summary": "Update Customer Properties",
                  "notes": null,
                  "responseClass": "CustomerModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Customer | Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/features",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access, azure style Eg. eastus",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "get_features",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features",
                  "summary": "Get Customer Features",
                  "notes": null,
                  "responseClass": "CustomerFeaturesDictResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Customer | Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/features/{feature_id}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access, azure style. E.g. eastus",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "The Feature to update",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "get_feature",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features/{id}",
                  "summary": "Get Customer's Feature Settings",
                  "notes": null,
                  "responseClass": "FeatureSettingsModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Customer | Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               },
               {
                  "method": "patch",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "The Feature to update",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Create command details and arguments",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "FeatureToggleModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "patch_features",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features/{id}",
                  "summary": "Toggle Customer Features",
                  "notes": null,
                  "responseClass": "CustomerFeaturesResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Customer | Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               },
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "The Feature to update",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Create command details and arguments",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "FeatureSettingsModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "set_feature",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features/{id}",
                  "summary": "Set Customer Feature's Settings",
                  "notes": null,
                  "responseClass": "FeatureSettingsModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Customer | Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               },
               {
                  "method": "delete",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "The Feature to update",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "delete_customer_feature",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/features/{id}",
                  "summary": "Delete Customer's Feature Settings",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad Request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Customer | Deployment | Region | Control Plane } not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/capabilities",
            "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/capabilities",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane where the customer resides",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer whose capabilities will be evaluated",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "capability",
                        "description": "The name of one specific capability, which will be the only one evaluated",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "force",
                        "description": "Force parameter confirming the intended action",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "query",
                        "defaultValue": false
                     },
                     {
                        "name": "X-Api-Version",
                        "description": "1.0 returns only boolean value per capability; 1.1 returns boolean and reason",
                        "required": false,
                        "dataType": "string",
                        "paramType": "header",
                        "enum": [
                           "1.0",
                           "1.1"
                        ],
                        "defaultValue": "1.0"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "Enumerate",
                  "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/capabilities",
                  "summary": "Get all capabilities or one capability for a customer",
                  "notes": null,
                  "responseClass": "CapabilitiesModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               },
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane where the customer resides",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer whose capabilities will be evaluated",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "capability_set",
                        "description": "Names of capabilities to evaluate, e.g. 'decommission', 'delete', 'recommission', etc.",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "CapabilitySetModel",
                        "paramType": "body"
                     },
                     {
                        "name": "force",
                        "description": "Force parameter confirming the intended action",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "query",
                        "defaultValue": false
                     },
                     {
                        "name": "X-Api-Version",
                        "description": "1.0 returns only boolean value per capability; 1.1 returns boolean and reason",
                        "required": false,
                        "dataType": "string",
                        "paramType": "header",
                        "enum": [
                           "1.0",
                           "1.1"
                        ],
                        "defaultValue": "1.0"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "Enumerate",
                  "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/capabilities",
                  "summary": "Get multiple, specific capabilities for a customer",
                  "notes": null,
                  "responseClass": "CapabilitiesModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/canary",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/canary",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane where the customer resides",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer whose canary type will be retrieved",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "Get Canary Type",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/canary",
                  "summary": "Get Customer's Canary Type",
                  "notes": null,
                  "responseClass": "CanaryTypeModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Not found"
                     }
                  ]
               },
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane where the customer resides",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer whose canary type will be set",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "canary_type",
                        "description": "Canary type of the customer",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "enum": [
                           "testing",
                           "opt_in",
                           "default",
                           "opt_out"
                        ],
                        "defaultValue": "default",
                        "paramType": "form"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "Set Canary Type",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/canary",
                  "summary": "Set Customer's Canary Type",
                  "notes": null,
                  "responseClass": "CanaryTypeModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/virtualsite/{virtual_site_id}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/virtualsite/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "virtual_site_id",
                        "description": "The customer's virtual site ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "FromVirtualSiteId",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/virtualsite/{id}",
                  "summary": "Look up a customer ID using a deployment and virtual site ID",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/virtualsite",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/virtualsite",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "ToVirtualSiteId",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/virtualsite",
                  "summary": "Look up a virtual site ID using a deployment and customer ID",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/unlock",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/unlock",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "delete",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "lock",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/unlock",
                  "summary": "Removes the lock on a particular customer",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/recover",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/recover",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "mockFailureInStage",
                        "description": "Set mockFailureInStage to a valid value if needed. Supported value for all is 'NR', Supported value for New is {'0', '1', 'Secondary_0', 'Secondary_1'}, Supported value for Upgrade is {'0', '1', '2', '3', '100', 'Secondary_0', 'Secondary_1', 'Secondary_2', 'Secondary_3'}",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "body",
                        "description": "Justification of a user recovering the customer. Max characters: 250. Example: \n{\"justification\": \"I am recovering this customer because it faulted, due to ABC reason which is already patched in this BCD ticket.\" } ",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "RecoverCustomerModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "recover",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/recover",
                  "summary": "Recovers a customer who Faulted or Halted",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/customer/{customer_id}/fastdecommission",
            "display_path": "/api/deployment/{id}/region/{id}/customer/{id}/fastdecommission",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "Deployment ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "enum": [
                           "production",
                           "staging",
                           "testing",
                           "testing_internal",
                           "xac_internal"
                        ]
                     },
                     {
                        "name": "region_id",
                        "description": "Region ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "enum": [
                           "eastus",
                           "westeurope",
                           "australiaeast"
                        ]
                     },
                     {
                        "name": "customer_id",
                        "description": "Customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "CWSAuth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "fastdecommissionTrialCustomer",
                  "display_path": "/api/deployment/{id}/region/{id}/customer/{id}/fastdecommission",
                  "summary": "API used by RP to fast decommission a trial customer",
                  "notes": null,
                  "responseClass": "str",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/movecontrolplane",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/movecontrolplane",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Specify the desired_control_plane_id to move the customer toExample - {\"desired_control_plane_id\": \"devcp2\"}",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "MoveControlPlaneModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "controlplanemove",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/movecontrolplane",
                  "summary": "Moves the customer from one control plane to another",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/resend",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/resend",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "resend",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/resend",
                  "summary": "Resends a customer's inprogress job (no effect if no job is running)",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/customer/{customer_id}",
            "display_path": "/api/customer/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "customer_id",
                        "description": "The customer to find",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "FindCustomer",
                  "display_path": "/api/customer/{id}",
                  "summary": "Look up DeploymentId, RegionId and ControlPlaneId using CustomerId",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Customer not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/customer/{customer_id}/onboard",
            "display_path": "/api/deployment/{id}/region/{id}/customer/{id}/onboard",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "Deployment ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "enum": [
                           "production",
                           "staging",
                           "testing",
                           "testing_internal",
                           "xac_internal"
                        ]
                     },
                     {
                        "name": "region_id",
                        "description": "Region ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "enum": [
                           "eastus",
                           "westeurope",
                           "australiaeast"
                        ]
                     },
                     {
                        "name": "customer_id",
                        "description": "Customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Tells Ptah to select this control plane for the customer if not already set.",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query",
                        "defaultValue": false
                     },
                     {
                        "name": "partner_id",
                        "description": "Tells Ptah the customer is a csp tenant customer and to set the customer partner id in data store",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query",
                        "defaultValue": null
                     },
                     {
                        "name": "partner",
                        "description": "Tells Ptah the customer is a csp partner customer and to initialize the customer tenant document in data store",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "query",
                        "defaultValue": false
                     },
                     {
                        "name": "body",
                        "description": "Create command details and arguments. Example: {\"Edition\":\"FullTrial\" } ",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "OnboardCustomerModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "CWSAuth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "onboardCustomer",
                  "display_path": "/api/deployment/{id}/region/{id}/customer/{id}/onboard",
                  "summary": "API used by RP to ensure a customer has a control plane",
                  "notes": null,
                  "responseClass": "str",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/customer/{customer_id}/updatesite",
            "display_path": "/api/deployment/{id}/region/{id}/customer/{id}/updatesite",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "Deployment ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "enum": [
                           "production",
                           "staging",
                           "testing",
                           "testing_internal",
                           "xac_internal"
                        ]
                     },
                     {
                        "name": "region_id",
                        "description": "Region ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "enum": [
                           "eastus",
                           "westeurope",
                           "australiaeast"
                        ]
                     },
                     {
                        "name": "customer_id",
                        "description": "Customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Create command details and arguments. Example: {\"Edition\": \"FullTrial\"\n, \"DdcCount\": \"1\", \n\"CanaryGroup\": \"default\"}",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "CustomerConfigurationModel",
                        "paramType": "body"
                     },
                     {
                        "name": "partner",
                        "description": "Tells Ptah the customer is a csp partner customer and to initialize the customer tenant document in data store",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "query",
                        "defaultValue": false
                     },
                     {
                        "name": "Authorization",
                        "description": "CWSAuth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "updatesite",
                  "display_path": "/api/deployment/{id}/region/{id}/customer/{id}/updatesite",
                  "summary": "API used by RP to ensure the customer has a site",
                  "notes": null,
                  "responseClass": "str"
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/restoredatabase",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/restoredatabase",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "Deployment ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Control plane ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path",
                        "defaultValue": false
                     },
                     {
                        "name": "customer_id",
                        "description": "Customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "bacpacFullPath: Full name of the bacpac file to use, e.g. \"Citrixmycustomer/Daily/03-30-2020/Citrixmycustomer.bacpac\". defaultToProductionBuild: If True, use the production DDC build if the bacpac is not tagged with a compatible build. bacpacStackId: Stack ID used by the customer when the backup was taken. Not required on release 81+.",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "RestoreFromBacpacModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "restoreDatabase",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/restoredatabase",
                  "summary": "Restore a customer's database from a bacpac file.",
                  "notes": null,
                  "responseClass": "str",
                  "responseMessages": [
                     {
                        "code": 202,
                        "message": "Restore started"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | Bacpac | Build}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/cwcauth",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/cwcauth",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to describe",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "target_url",
                        "description": "The target_url",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "form"
                     },
                     {
                        "name": "customer_id",
                        "description": "(optional) target customer. If given, will sign the url with single-tenant key",
                        "required": false,
                        "allowMuliple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "post",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/cwcauth",
                  "summary": "Generates a CWC auth header for a target url",
                  "notes": null,
                  "responseClass": "CwcAuthHeadersModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer(if specified)}  not found"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment",
            "display_path": "/api/deployment",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "A specific deployment whose metadata will be returned",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/deployment",
                  "summary": "Enumerates the deployments",
                  "notes": null,
                  "responseClass": "DeploymentListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment_reformatted",
            "display_path": "/api/deployment_reformatted",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "A specific deployment whose metadata will be returned",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerateReformatted",
                  "display_path": "/api/deployment_reformatted",
                  "summary": "Enumerates the deployments Reformatted",
                  "notes": null,
                  "responseClass": "DeploymentListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region Id (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Feature of control plane",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate_features",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features",
                  "summary": "Enumerate Control Plane Features",
                  "notes": null,
                  "responseClass": "ControlPlaneResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment Not Found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features/{feature_id}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "patch",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region Id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Control plane of the feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "ID of the new feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Edition of the feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "display_name",
                        "description": "Display name of the new feature (defaults to feature_id)",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "body",
                        "description": "Patch property settings",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "PatchFeaturePropertiesModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "update feature properties",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}",
                  "summary": "Update Existing Feature",
                  "notes": null,
                  "responseClass": "PropertyFeatureResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Feature Not Found in given control plane"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               },
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region Id (unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Control plane of the feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "ID of the new feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Edition of the feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "display_name",
                        "description": "Display name of the new feature (defaults to feature_id)",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "enabled",
                        "description": "Enables/disables the new feature upon creation (defaults to false)",
                        "required": false,
                        "DefaultValue": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "query"
                     },
                     {
                        "name": "body",
                        "description": "Extra property settings",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "ExtraSettingsModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "create_feature",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}",
                  "summary": "Create New Control Plane Feature",
                  "notes": null,
                  "responseClass": "PropertyFeatureResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Control plane Not Found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/features/{feature_id}/overridecheck",
            "display_path": "/api/deployment/{id}/features/{id}/overridecheck",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "ID of the new feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Edition of the feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "check if feature is overridden",
                  "display_path": "/api/deployment/{id}/features/{id}/overridecheck",
                  "summary": "Check if Feature is Overridden",
                  "notes": null,
                  "responseClass": "FeatureOverriddenResponseModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Feature Not Found in given deployment"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/features/{feature_id}",
            "display_path": "/api/deployment/{id}/features/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "delete",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "ID of the feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Edition of the feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "delete feature",
                  "display_path": "/api/deployment/{id}/features/{id}",
                  "summary": "Delete Feature",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Feature Not Found in given deployment"
                     },
                     {
                        "code": 409,
                        "message": "Feature delete canary not complete"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features/{feature_id}/canary",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region Id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Feature of control plane",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "Canary values for feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Canary values for feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "get_canary",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary",
                  "summary": "Get Canary Settings",
                  "notes": null,
                  "responseClass": "CanaryResponseModelVerbose",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment Not Found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features/{feature_id}/canary/start",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/start",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to describe",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "Canary values to update for this feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "settings",
                        "description": "Canary settings to update for this feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "CanarySettingsRequest",
                        "paramType": "body"
                     },
                     {
                        "name": "edition_id",
                        "description": "Canary values for feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "post",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/start",
                  "summary": "Add Canary Settings",
                  "notes": null,
                  "responseClass": "str",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features/{feature_id}/canary/update",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/update",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to describe",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "Canary values to update for this feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "update_body",
                        "description": "Canary values to update for this feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "CanaryUpdateModel",
                        "paramType": "body"
                     },
                     {
                        "name": "edition_id",
                        "description": "Canary values for feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "put",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/update",
                  "summary": "Update Canary Settings",
                  "notes": null,
                  "responseClass": "CanaryCustomerListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features/{feature_id}/canary/remove",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/remove",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "delete",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "Region Id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "Feature of control plane",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "Canary values for feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Canary values for feature",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "delete",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/remove",
                  "summary": "Remove Canary Settings",
                  "notes": null,
                  "responseClass": "str",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment Not Found"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/features/{feature_id}/canary/complete",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/complete",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to describe",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "feature_id",
                        "description": "Canary values to update for this feature",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "edition_id",
                        "description": "Edition Id",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "put",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/features/{id}/canary/complete",
                  "summary": "Complete Canary Settings",
                  "notes": null,
                  "responseClass": "str",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid Input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane}  not found"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/healthy",
            "display_path": "/api/healthy",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [],
                  "nickname": "healthy",
                  "display_path": "/api/healthy",
                  "summary": "Checks if Ptah Server is running.",
                  "notes": null,
                  "responseClass": "HealthyModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/capacity",
            "display_path": "/api/deployment/{id}/capacity",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "capacity",
                  "display_path": "/api/deployment/{id}/capacity",
                  "summary": "Checks how many customers are concurrently provisioning/being operated on in a deployment",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController} not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal server error"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region",
            "display_path": "/api/deployment/{id}/region",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/deployment/{id}/region",
                  "summary": "Enumerates the deployments",
                  "notes": null,
                  "responseClass": "RegionListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment Not Found"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/teamcity/vhd/stream/{stream_name}",
            "display_path": "/api/teamcity/vhd/stream/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "stream_name",
                        "description": "The stream to select VHDs from",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/teamcity/vhd/stream/{id}",
                  "summary": "Enumerates the available VHDs",
                  "notes": null,
                  "responseClass": "VhdListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "VHD not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/teamcity/build/upgrade",
            "display_path": "/api/teamcity/build/upgrade",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [],
                  "nickname": "get",
                  "display_path": "/api/teamcity/build/upgrade",
                  "summary": "Gets the current VHD to be used for upgrade testing (the current production VHD)",
                  "notes": null,
                  "responseClass": "VhdListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "VHD not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/admincustomers",
            "display_path": "/api/deployment/{id}/region/{id}/admincustomers",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/deployment/{id}/region/{id}/admincustomers",
                  "summary": "Enumerates all admin customers within a deployment",
                  "notes": null,
                  "responseClass": "EnumerateAdminsModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Deployment not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/admincustomers/{customer_id}",
            "display_path": "/api/deployment/{id}/region/{id}/admincustomers/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The admin customer ID",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "getAdmin",
                  "display_path": "/api/deployment/{id}/region/{id}/admincustomers/{id}",
                  "summary": "Gets a single admin customer within a deployment",
                  "notes": null,
                  "responseClass": "GetAdminModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Customer}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/admincustomer/{customer_id}",
            "display_path": "/api/admincustomer/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "customer_id",
                        "description": "The customer to find",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "FindAdminCustomer",
                  "display_path": "/api/admincustomer/{id}",
                  "summary": "Look up DeploymentId and RegionId using CustomerId",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Customer not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xaepowerresources/{action}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xaepowerresources/{action}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to find",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "action",
                        "description": "'on' to power on, 'off' to power off",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "enum": [
                           "on",
                           "off"
                        ],
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "XAE Power Resources",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xaepowerresources/{action}",
                  "summary": "Power On or Off the XAE customer resources",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Customer not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         }
      ],
      [
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/{xd_controller_id}",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The customer to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "describe",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}",
                  "summary": "Describes an XD Controller",
                  "notes": null,
                  "responseClass": "XdControllerModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController} not found"
                     }
                  ]
               },
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XDController to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Put command details and arguments",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "XDControllerPutBodyModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "input",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}",
                  "summary": "Performs an operation on the DDCs",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "Initiated the creation process.. Check the environment status to learn when it is ready"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Error processing request"
                     }
                  ]
               },
               {
                  "method": "delete",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "DefaultValue": "dummy_region_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XDController to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "force",
                        "description": "Optional: Force the controller to be deleted (i.e., delete existing controller) (Default: false)",
                        "required": false,
                        "DefaultValue": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "form"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "delete",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}",
                  "summary": "Deletes an XD Controller",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "Initiated the deletion process. Check the status to get updates on the progress"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController}  not found"
                     },
                     {
                        "code": 500,
                        "message": "Error processing request"
                     }
                  ]
               },
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XD Controller to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "build_name",
                        "description": "The name of the desired build, e.g. Release-Cloud42-13 (API version 1.1 only)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "form"
                     },
                     {
                        "name": "force",
                        "description": "Optional: Force the controller creation (delete existing controller) (Default: false)",
                        "required": false,
                        "DefaultValue": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "form"
                     },
                     {
                        "name": "upgrade",
                        "description": "Optional: Upgrade the controller from it's existing version (Default: false)",
                        "required": false,
                        "DefaultValue": false,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "form"
                     },
                     {
                        "name": "tryLiveSchemaUpgrade",
                        "description": "Optional: live upgrade for the FMA services when possible (Default: true)",
                        "required": false,
                        "DefaultValue": true,
                        "allowMultiple": false,
                        "dataType": "boolean",
                        "paramType": "form"
                     },
                     {
                        "name": "mockFailureInStage",
                        "description": "Mock failure in stage of your choice. Supported value for Fresh provisiong is {0, 1, 'Secondary_0', 'Secondary_1'}. Supported value for Upgrades is {0, 1, 2, 3, 100, 'Secondary_0', 'Secondary_1', 'Secondary_2', 'Secondary_3'}.",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "form"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "create",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}",
                  "summary": "Creates an XD Controller",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "Initiated the creation process.. Check the environment status to learn when it is ready"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | xd_controller_id}  not found"
                     },
                     {
                        "code": 409,
                        "message": "Conflict"
                     },
                     {
                        "code": 500,
                        "message": "Error processing request"
                     },
                     {
                        "code": 502,
                        "message": "Bad gateway"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/powerstate",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/powerstate",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "power_state",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/powerstate",
                  "summary": "Shows the power state of a customer's XD Controllers",
                  "notes": null,
                  "responseClass": "NestedPowerStateModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController} not found"
                     },
                     {
                        "code": 500,
                        "message": "Power state could not be retrieved due to unexpected error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/currentbuild/{current_build_name}/desiredbuild/{desired_build_name}/upgrade",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/upgrade",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "current_build_name",
                        "description": "The name of the current build",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "desired_build_name",
                        "description": "The name of the desired build",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "customers list(The max input is 200 customers)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "BatchXDControllersUpgradeModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "batch_upgrade",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/upgrade",
                  "summary": "Performs Upgrade on batch XD Controllers in same control plane",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 500,
                        "message": "Internal server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/{xd_controller_id}/rollback",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/rollback",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "put",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XDController to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "rollback",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/rollback",
                  "summary": "Performs Rollback on XD Controller Operation by rolling it back to its previous build",
                  "notes": null,
                  "responseClass": "XdControllerModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController} not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "the id of the deployment module",
                        "DefaultValue": "dummy_deployment_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "the id of the deployment region",
                        "DefaultValue": "dummy_region_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "the CWS controlPlaneId the customer is paired with",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "the customer to use",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller",
                  "summary": "Enumerates all XD Controllers for a customer<br/>Lists all the Xd Control Plane environments",
                  "notes": null,
                  "responseClass": "XDControllerListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/xdcontroller",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/xdcontroller",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "the id of the deployment module",
                        "DefaultValue": "dummy_deployment_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "the id of the deployment region",
                        "DefaultValue": "dummy_region_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "the CWS controlPlaneId the customer is paired with",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "filter_keys",
                        "description": "filter the context keys or not (default false). Choosing 'true' will give you a smaller set of context attributes in response, including: [customerId, controlPlaneId, state, halted, error, service_type, edition, canary, ddcIp, ddcs, buildName, existingStacks, lastTransitionTime, internal]",
                        "required": false,
                        "dataType": "boolean",
                        "paramType": "query",
                        "enum": [
                           false,
                           true
                        ]
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "enumerate_all",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/xdcontroller",
                  "summary": "Enumerates all XD Controllers for a control plane",
                  "notes": null,
                  "responseClass": "XDControllerFilteredListModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/simple",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/simple",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "describe",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/simple",
                  "summary": "Get Full Services Customers SimpleUI Catalogs",
                  "notes": null,
                  "responseClass": "XdControllerSimpleUi",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController} not found"
                     },
                     {
                        "code": 500,
                        "message": "Server Error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/start",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/start",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "the id of the deployment module",
                        "DefaultValue": "dummy_deployment_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "the id of the deployment region",
                        "DefaultValue": "dummy_region_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "the controlPlaneId of the customer",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "the customerId of the customer",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "ddc_hostnames",
                        "description": "List of DDCs to start. If none are provided, all DDCs will be started.",
                        "required": false,
                        "dataType": "StartStopRequestModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "start",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/start",
                  "summary": "Start an XD Controller",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "Initiated the starting process.. Check the environment status to learn when it is running"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 500,
                        "message": "Error processing request"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/stop",
            "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/stop",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "the id of the deployment module",
                        "DefaultValue": "dummy_deployment_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "the id of the deployment region",
                        "DefaultValue": "dummy_region_id",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "the controlPlaneId of the customer",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "the customerId of the customer",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "ddc_hostnames",
                        "description": "List of DDCs to stop. If none are provided, all DDCs will be stopped.",
                        "required": false,
                        "dataType": "StartStopRequestModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "stop",
                  "display_path": "/api/deployment/{id}/region/{id}/controlplane/{id}/customer/{id}/xdcontroller/stop",
                  "summary": "Stop an XD Controller",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "Initiated the stopping process.. Check the environment status to learn when it is stopped"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 500,
                        "message": "Error processing request"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/{xd_controller_id}/logs",
            "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/logs",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane where the customer resides",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer whose logs URL will be returned",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XD controller whose logs URL will be returned (currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "logfile",
                        "description": "The zipped file containing the logs. Appended to the url (optional)",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "query"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "logs url",
                  "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/logs",
                  "summary": "Get the URL for a customer's DDC service logs and the CWC auth header with which to retrieve them",
                  "notes": null,
                  "responseClass": "XDControllerLogsUrlModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/{xd_controller_id}/patch",
            "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/patch",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "patch",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane where the customer resides",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer whose context will be updated",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XD controller whose context will be updated (currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "Attributes in the context to be updated. They can be deleted, updated, or added to. Follow the example in the model schema, you must first specify a document store document to update, followed by the key and value (if value is applicable).",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "XDControllerPatchModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "properties",
                  "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/patch",
                  "summary": "Patch context attributes",
                  "notes": null,
                  "responseClass": "XDControllerPropertiesModel",
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Bad request"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/xdcustomer/{customer_id}",
            "display_path": "/api/xdcustomer/{id}",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "get",
                  "parameters": [
                     {
                        "name": "customer_id",
                        "description": "The customer to find",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "FindXDCustomer",
                  "display_path": "/api/xdcustomer/{id}",
                  "summary": "Look up DeploymentId, RegionId and ControlPlaneId using CustomerId",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "Customer not found"
                     },
                     {
                        "code": 500,
                        "message": "Server error"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/xdcontroller/{xd_controller_id}/create",
            "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/create",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "xd_controller_id",
                        "description": "The XD Controller to access (Currently unused)",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "body",
                        "description": "The request body",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "XdControllerCreateOrUpgradeModel",
                        "paramType": "body"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "createOrUpgrade",
                  "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/xdcontroller/{id}/create",
                  "summary": "Create or upgrade an XD Controller",
                  "notes": null,
                  "responseClass": {},
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "Initiated the creation process.. Check the environment status to learn when it is ready"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | xd_controller_id}  not found"
                     },
                     {
                        "code": 409,
                        "message": "Conflict"
                     },
                     {
                        "code": 500,
                        "message": "Error processing request"
                     },
                     {
                        "code": 502,
                        "message": "Bad gateway"
                     }
                  ]
               }
            ]
         },
         {
            "path": "/api/deployment/{deployment_id}/region/{region_id}/controlplane/{control_plane_id}/customer/{customer_id}/splitdb",
            "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/splitdb",
            "description": "Represents an abstract RESTful resource. Concrete resources should",
            "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.",
            "operations": [
               {
                  "method": "post",
                  "parameters": [
                     {
                        "name": "deployment_id",
                        "description": "The deployment to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "region_id",
                        "description": "The region to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "control_plane_id",
                        "description": "The control plane to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "customer_id",
                        "description": "The customer to access",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "path"
                     },
                     {
                        "name": "Authorization",
                        "description": "Thoth token",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     },
                     {
                        "name": "Citrix-TransactionId",
                        "description": "Transaction Id to track the request",
                        "required": false,
                        "allowMultiple": false,
                        "dataType": "string",
                        "paramType": "header"
                     }
                  ],
                  "nickname": "split_database",
                  "display_path": "/api/deployment/{id}region/{id}/controlplane/{id}/customer/{id}/splitdb",
                  "summary": "Performs database split for a particular customer",
                  "notes": null,
                  "responseMessages": [
                     {
                        "code": 200,
                        "message": "OK"
                     },
                     {
                        "code": 400,
                        "message": "Invalid input"
                     },
                     {
                        "code": 401,
                        "message": "Unauthorized"
                     },
                     {
                        "code": 403,
                        "message": "Forbidden"
                     },
                     {
                        "code": 404,
                        "message": "{Deployment | Region | Control Plane | Customer | XDController} not found"
                     },
                     {
                        "code": 500,
                        "message": "Internal server error"
                     }
                  ]
               }
            ]
         }
      ]
   ],
   "models": {
      "BuildModel": {
         "id": "BuildModel",
         "description": null,
         "notes": null,
         "required": [
            "build_name",
            "build-status",
            "to-str",
            "is_production",
            "production_ready"
         ],
         "properties": {
            "build_name": {
               "type": "string"
            },
            "build-status": {
               "type": "string"
            },
            "is_production": {
               "type": "integer"
            },
            "production_ready": {
               "type": "integer"
            },
            "to-str": {
               "type": "string"
            }
         }
      },
      "BuildAttributeRequestModel": {
         "id": "BuildAttributeRequestModel",
         "description": null,
         "notes": null,
         "properties": {
            "build_status": {
               "type": "string"
            },
            "production_ready": {
               "type": "boolean"
            }
         }
      },
      "PreupgradeBuildModel": {
         "id": "PreupgradeBuildModel",
         "description": null,
         "notes": null,
         "properties": {
            "build_name": {
               "type": "string"
            }
         }
      },
      "ProductionBuildModel": {
         "id": "ProductionBuildModel",
         "description": null,
         "notes": null,
         "properties": {
            "stable_production_build": {
               "type": "string"
            },
            "canary_production_build": {
               "type": "string"
            },
            "current_rollout_canary_group": {
               "type": "string"
            },
            "retention_days": {
               "type": "integer"
            }
         }
      },
      "ContainerStateModel": {
         "id": "ContainerStateModel",
         "description": null,
         "notes": null,
         "required": [
            "virtualSiteId",
            "serviceName",
            "containerImageUri",
            "instanceCount",
            "enabled"
         ],
         "properties": {
            "virtualSiteId": {
               "type": "string"
            },
            "serviceName": {
               "type": "string"
            },
            "containerImageUri": {
               "type": "string"
            },
            "instanceCount": {
               "type": "string"
            },
            "enabled": {
               "type": "boolean"
            },
            "ddcInstanceIds": {
               "type": "string"
            }
         }
      },
      "SetContainerStateBatchModel": {
         "id": "SetContainerStateBatchModel",
         "description": null,
         "notes": null,
         "required": [
            "desiredState"
         ],
         "properties": {
            "desiredState": {
               "type": "array",
               "items": {
                  "$ref": "ContainerStateModel"
               }
            }
         }
      },
      "GetContainerStateResponseModel": {
         "id": "GetContainerStateResponseModel",
         "description": null,
         "notes": null,
         "properties": {
            "virtualSiteId": {
               "type": "string"
            },
            "desiredStateAsString": {
               "type": "string"
            }
         }
      },
      "ControlPlaneModel": {
         "id": "ControlPlaneModel",
         "description": null,
         "notes": null,
         "required": [
            "controlPlaneId",
            "resourceProvider"
         ],
         "properties": {
            "adPrivateIp": {
               "type": "string"
            },
            "bastionSG": {
               "type": "string"
            },
            "cfVersion": {
               "type": "string"
            },
            "configUri": {
               "type": "string"
            },
            "controlPlaneId": {
               "type": "string"
            },
            "customerSG": {
               "type": "string"
            },
            "customerTableName": {
               "type": "string"
            },
            "cwcBaseUrl": {
               "type": "string"
            },
            "domainControllerSG": {
               "type": "string"
            },
            "domainMemberSG": {
               "type": "string"
            },
            "domainName": {
               "type": "string"
            },
            "genericCustFilesFolderOnS3": {
               "type": "string"
            },
            "hostedZoneName": {
               "type": "string"
            },
            "lastOperationTime": {
               "type": "string"
            },
            "licenseServerHostName": {
               "type": "string"
            },
            "netScalerContentSwitchingIP": {
               "type": "string"
            },
            "netbiosName": {
               "type": "string"
            },
            "netscalerPassword": {
               "type": "string"
            },
            "nsIp1": {
               "type": "string"
            },
            "nsVip1": {
               "type": "string"
            },
            "nsVip2": {
               "type": "string"
            },
            "privateSG": {
               "type": "string"
            },
            "rdsAllocatedStorage": {
               "type": "string"
            },
            "rdsAutoMinorVersionUpgrade": {
               "type": "string"
            },
            "rdsAvailabilityZone": {
               "type": "string"
            },
            "rdsDbParamGroupName": {
               "type": "string"
            },
            "rdsEngine": {
               "type": "string"
            },
            "rdsInstanceClass": {
               "type": "string"
            },
            "rdsIops": {
               "type": "string"
            },
            "rdsLicenseModel": {
               "type": "string"
            },
            "rdsMultiAz": {
               "type": "string"
            },
            "rdsOptionGroupName": {
               "type": "string"
            },
            "rdsPort": {
               "type": "string"
            },
            "rdsSecondaryZone": {
               "type": "string"
            },
            "rdsSubnetGroup": {
               "type": "string"
            },
            "resourceProvider": {
               "type": "string"
            },
            "rpToFulfill": {
               "type": "string"
            },
            "serverSubnet1": {
               "type": "string"
            },
            "siteTableName": {
               "type": "string"
            },
            "siteTableServiceUrl": {
               "type": "string"
            },
            "timeGap": {
               "type": "string"
            }
         }
      },
      "ControlPlaneListItemModel": {
         "id": "ControlPlaneListItemModel",
         "description": null,
         "notes": null,
         "required": [
            "controlPlaneId"
         ],
         "properties": {
            "controlPlaneId": {
               "type": "string"
            }
         }
      },
      "ControlPlaneListModel": {
         "id": "ControlPlaneListModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "ControlPlaneListItemModel"
               }
            }
         }
      },
      "RestoreFromBacpacModel": {
         "id": "RestoreFromBacpacModel",
         "description": null,
         "notes": null,
         "required": [
            "bacpacFullPath"
         ],
         "properties": {
            "bacpacFullPath": {
               "type": "string"
            },
            "bacpacStackId": {
               "type": "string"
            },
            "defaultToProductionBuild": {
               "type": "boolean"
            }
         }
      },
      "RecoverCustomerModel": {
         "id": "RecoverCustomerModel",
         "description": null,
         "notes": null,
         "properties": {
            "justification": {
               "type": "string"
            }
         }
      },
      "OnboardCustomerModel": {
         "id": "OnboardCustomerModel",
         "description": null,
         "notes": null,
         "required": [
            "Edition"
         ],
         "properties": {
            "Edition": {
               "type": "string"
            }
         }
      },
      "CustomerConfigurationModel": {
         "id": "CustomerConfigurationModel",
         "description": null,
         "notes": null,
         "required": [
            "Edition",
            "DdcCount",
            "CanaryGroup"
         ],
         "properties": {
            "Edition": {
               "type": "string"
            },
            "DdcCount": {
               "type": "string"
            },
            "CanaryGroup": {
               "type": "string"
            }
         }
      },
      "CustomerRdpModel": {
         "id": "CustomerRdpModel",
         "description": null,
         "notes": null,
         "required": [
            "username",
            "password"
         ],
         "properties": {
            "username": {
               "type": "string"
            },
            "password": {
               "type": "string"
            }
         }
      },
      "StoreFrontInfoResponseModel": {
         "id": "StoreFrontInfoResponseModel",
         "description": null,
         "notes": null,
         "properties": {
            "externalHostname": {
               "type": "string"
            },
            "shardName": {
               "type": "string"
            },
            "storeNumber": {
               "type": "string"
            }
         }
      },
      "CustomerFeaturesResponseModel": {
         "id": "CustomerFeaturesResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "customer_enabled",
            "default_enabled",
            "effective_enabled",
            "settings"
         ],
         "properties": {
            "customer_enabled": {
               "type": "string",
               "enum": [
                  "Enabled",
                  "Disabled",
                  "Null"
               ],
               "description": "Does the customer have an explicit override for this feature? Null if no override present"
            },
            "default_enabled": {
               "type": "boolean",
               "description": "The control plane wide default feature toggle state"
            },
            "effective_enabled": {
               "type": "boolean",
               "description": "The effective feature toggle status that actually affects the customer"
            },
            "settings": {
               "type": "dict",
               "description": "A dictionary of configurable feature specific settings"
            }
         }
      },
      "CustomerFeaturesDictResponseModel": {
         "id": "CustomerFeaturesDictResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "sample_feature_one",
            "sample_feature_two"
         ],
         "properties": {
            "sample_feature_one": {
               "type": "CustomerFeaturesResponseModel"
            },
            "sample_feature_two": {
               "type": "CustomerFeaturesResponseModel"
            }
         }
      },
      "CustomerFeaturesRequestModel": {
         "id": "CustomerFeaturesRequestModel",
         "description": null,
         "notes": null,
         "properties": {
            "customer_enabled": {
               "type": "string",
               "enum": [
                  "Enabled",
                  "Disabled",
                  "Null"
               ],
               "description": "Does the customer have an explicit override for this feature? Null if no override present"
            },
            "settings": {
               "type": "dict",
               "description": "A dictionary of configurable feature specific settings"
            }
         }
      },
      "CustomerFeaturesDictRequestModel": {
         "id": "CustomerFeaturesDictRequestModel",
         "description": null,
         "notes": null,
         "required": [
            "sample_feature_one",
            "sample_feature_two"
         ],
         "properties": {
            "sample_feature_one": {
               "type": "CustomerFeaturesRequestModel"
            },
            "sample_feature_two": {
               "type": "CustomerFeaturesRequestModel"
            }
         }
      },
      "CustomerCreateModel": {
         "id": "CustomerCreateModel",
         "description": null,
         "notes": null,
         "required": [
            "customer_id",
            "user_id",
            "email"
         ],
         "properties": {
            "customer_id": {
               "type": "string"
            },
            "user_id": {
               "type": "string"
            },
            "email": {
               "type": "string"
            }
         }
      },
      "FeatureSettingsModel": {
         "id": "FeatureSettingsModel",
         "description": null,
         "notes": null,
         "required": [
            "Enabled"
         ],
         "properties": {
            "Enabled": {
               "type": "string"
            },
            "property1": {
               "type": "string"
            }
         }
      },
      "FeatureToggleModel": {
         "id": "FeatureToggleModel",
         "description": null,
         "notes": null,
         "required": [
            "customer_enabled"
         ],
         "properties": {
            "customer_enabled": {
               "type": "string"
            },
            "property1": {
               "type": "string"
            }
         }
      },
      "CustomerDeleteModel": {
         "id": "CustomerDeleteModel",
         "description": null,
         "notes": null,
         "required": [
            "operation_type"
         ],
         "properties": {
            "operation_type": {
               "type": "string"
            }
         }
      },
      "MoveControlPlaneModel": {
         "id": "MoveControlPlaneModel",
         "description": null,
         "notes": null,
         "required": [
            "desired_control_plane_id"
         ],
         "properties": {
            "desired_control_plane_id": {
               "type": "string"
            },
            "delete_old_stack": {
               "type": "boolean"
            }
         }
      },
      "CustomerModel": {
         "id": "CustomerModel",
         "description": null,
         "notes": null,
         "required": [
            "customerId"
         ],
         "properties": {
            "customerId": {
               "type": "string"
            },
            "rdsServer": {
               "type": "string"
            },
            "uid": {
               "type": "string"
            },
            "desiredDdcCount": {
               "type": "string"
            },
            "email": {
               "type": "string"
            },
            "ddcs": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "dbName": {
               "type": "string"
            },
            "enable_automation": {
               "type": "boolean"
            },
            "users": {
               "type": "string"
            },
            "userGroups": {
               "type": "string"
            },
            "tags": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "CustomerListModel": {
         "id": "CustomerListModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "CustomerModel"
               }
            }
         }
      },
      "CapabilitiesModel": {
         "id": "CapabilitiesModel",
         "description": null,
         "notes": null,
         "properties": {
            "capabilities": {
               "type": "array",
               "items": {
                  "$ref": null
               }
            }
         }
      },
      "CapabilitySetModel": {
         "id": "CapabilitySetModel",
         "description": null,
         "notes": null,
         "required": [
            "capability_set"
         ],
         "properties": {
            "capability_set": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "CustomerListPatchModel": {
         "id": "CustomerListPatchModel",
         "description": null,
         "notes": null,
         "properties": {
            "add": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "remove": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "PatchTagsModel": {
         "id": "PatchTagsModel",
         "description": null,
         "notes": null,
         "properties": {
            "tag1": {
               "type": "string"
            },
            "tag2": {
               "type": "string"
            }
         }
      },
      "CustomerTagsPatchModel": {
         "id": "CustomerTagsPatchModel",
         "description": null,
         "notes": null,
         "properties": {
            "add": {
               "type": "PatchTagsModel"
            },
            "remove": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "update": {
               "type": "PatchTagsModel"
            }
         }
      },
      "CustomerPatchModel": {
         "id": "CustomerPatchModel",
         "description": null,
         "notes": null,
         "properties": {
            "enable_automation": {
               "type": "boolean"
            },
            "ddcInstanceType": {
               "type": "string"
            },
            "rdsServer": {
               "type": "string"
            },
            "users": {
               "type": "CustomerListPatchModel"
            },
            "userGroups": {
               "type": "CustomerListPatchModel"
            },
            "email": {
               "type": "string"
            },
            "desiredDdcCount": {
               "type": "string"
            },
            "overrideDdcCount": {
               "type": "string"
            },
            "tags": {
               "type": "CustomerTagsPatchModel"
            }
         }
      },
      "CustomerUserListModel": {
         "id": "CustomerUserListModel",
         "description": null,
         "notes": null,
         "properties": {
            "users": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "CanaryTypeModel": {
         "id": "CanaryTypeModel",
         "description": null,
         "notes": null,
         "properties": {
            "control_plane_id": {
               "type": "string"
            },
            "customer_id": {
               "type": "string"
            },
            "canary_type": {
               "type": "string"
            }
         }
      },
      "CwcAuthHeadersModel": {
         "id": "CwcAuthHeadersModel",
         "description": null,
         "notes": null,
         "required": [
            "Authorization"
         ],
         "properties": {
            "Authorization": {
               "type": "string"
            }
         }
      },
      "DeploymentModel": {
         "id": "DeploymentModel",
         "description": null,
         "notes": null,
         "required": [
            "name"
         ],
         "properties": {
            "name": {
               "type": "string"
            }
         }
      },
      "DeploymentListModel": {
         "id": "DeploymentListModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "DeploymentModel"
               }
            }
         }
      },
      "CanaryResponseModel": {
         "id": "CanaryResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "stage",
            "percentage",
            "settings"
         ],
         "properties": {
            "stage": {
               "type": "string"
            },
            "percentage": {
               "type": "integer"
            },
            "settings": {
               "type": "string"
            }
         }
      },
      "CanaryResponseModelVerbose": {
         "id": "CanaryResponseModelVerbose",
         "description": null,
         "notes": null,
         "required": [
            "stage",
            "percentage",
            "settings",
            "rolled_out_customers"
         ],
         "properties": {
            "rolled_out_customers": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "stage": {
               "type": "string"
            },
            "percentage": {
               "type": "integer"
            },
            "settings": {
               "type": "string"
            }
         }
      },
      "FeatureOverriddenResponseModel": {
         "id": "FeatureOverriddenResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "feature_overridden",
            "reason"
         ],
         "properties": {
            "feature_overridden": {
               "type": "boolean"
            },
            "reason": {
               "type": "string"
            }
         }
      },
      "FeatureResponseModel": {
         "id": "FeatureResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "feature_id",
            "settings"
         ],
         "properties": {
            "feature_id": {
               "type": "string"
            },
            "settings": {
               "type": "string"
            },
            "canary": {
               "type": "CanaryResponseModel"
            }
         }
      },
      "EditionsResponseModel": {
         "id": "EditionsResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "edition_name",
            "features"
         ],
         "properties": {
            "edition_name": {
               "type": "string"
            },
            "features": {
               "type": "array",
               "items": {
                  "$ref": "FeatureResponseModel"
               }
            }
         }
      },
      "ControlPlaneResponseModel": {
         "id": "ControlPlaneResponseModel",
         "description": null,
         "notes": null,
         "required": [
            "control_plane_id",
            "features",
            "editions"
         ],
         "properties": {
            "control_plane_id": {
               "type": "string"
            },
            "features": {
               "type": "array",
               "items": {
                  "$ref": "FeatureResponseModel"
               }
            },
            "editions": {
               "type": "array",
               "items": {
                  "$ref": "EditionsResponseModel"
               }
            }
         }
      },
      "PropertyFeatureResponseModel": {
         "id": "PropertyFeatureResponseModel",
         "description": null,
         "notes": null,
         "properties": {
            "feature_id": {
               "type": "string"
            },
            "display_name": {
               "type": "string"
            },
            "enabled": {
               "type": "boolean"
            },
            "other_property": {
               "type": "string"
            }
         }
      },
      "ExtraSettingsModel": {
         "id": "ExtraSettingsModel",
         "description": null,
         "notes": null,
         "required": [
            "__customerTitle",
            "__customerDescription"
         ],
         "properties": {
            "property1": {
               "type": "string"
            },
            "property2": {
               "type": "string"
            },
            "__customerTitle": {
               "type": "string"
            },
            "__customerDescription": {
               "type": "string"
            }
         }
      },
      "PatchFeatureInnerPropertiesModel": {
         "id": "PatchFeatureInnerPropertiesModel",
         "description": null,
         "notes": null,
         "properties": {
            "property1": {
               "type": "string"
            },
            "property2": {
               "type": "string"
            },
            "__customerTitle": {
               "type": "string"
            },
            "__customerDescription": {
               "type": "string"
            }
         }
      },
      "PatchFeaturePropertiesModel": {
         "id": "PatchFeaturePropertiesModel",
         "description": null,
         "notes": null,
         "properties": {
            "upsert": {
               "type": "PatchFeatureInnerPropertiesModel"
            },
            "remove": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "CanarySettingsRequest": {
         "id": "CanarySettingsRequest",
         "description": null,
         "notes": null,
         "required": [
            "Enabled"
         ],
         "properties": {
            "Enabled": {
               "type": "string"
            },
            "__displayName": {
               "type": "string"
            },
            "settings_key1": {
               "type": "string"
            }
         }
      },
      "CanaryUpdateModel": {
         "id": "CanaryUpdateModel",
         "description": null,
         "notes": null,
         "required": [
            "stage",
            "percentage"
         ],
         "properties": {
            "stage": {
               "type": "string"
            },
            "percentage": {
               "type": "integer"
            }
         }
      },
      "CanaryCustomerListModel": {
         "id": "CanaryCustomerListModel",
         "description": null,
         "notes": null,
         "properties": {
            "affected_customer_list": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "rolled_out_customer_list": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "HealthyModel": {
         "id": "HealthyModel",
         "description": null,
         "notes": null,
         "properties": {
            "code": {
               "type": "integer"
            },
            "message": {
               "type": "string"
            }
         }
      },
      "GitHealthCheckModel": {
         "id": "GitHealthCheckModel",
         "description": null,
         "notes": null,
         "properties": {
            "active_commit": {
               "type": "string"
            },
            "commit_tag": {
               "type": "string"
            },
            "active_branch": {
               "type": "string"
            }
         }
      },
      "HealthCheckInfoModel": {
         "id": "HealthCheckInfoModel",
         "description": null,
         "notes": null,
         "properties": {
            "cloudbot_last_loop_time": {
               "type": "string"
            },
            "is_healthy": {
               "type": "boolean"
            }
         }
      },
      "BotHealthCheckModel": {
         "id": "BotHealthCheckModel",
         "description": null,
         "notes": null,
         "properties": {
            "control_plane_id": {
               "type": "HealthCheckInfoModel"
            }
         }
      },
      "HealthCheckModel": {
         "id": "HealthCheckModel",
         "description": null,
         "notes": null,
         "properties": {
            "code": {
               "type": "integer"
            },
            "message": {
               "type": "string"
            },
            "git": {
               "type": "GitHealthCheckModel"
            },
            "bots": {
               "type": "BotHealthCheckModel"
            }
         }
      },
      "RegionModel": {
         "id": "RegionModel",
         "description": null,
         "notes": null,
         "required": [
            "name"
         ],
         "properties": {
            "name": {
               "type": "string"
            }
         }
      },
      "RegionListModel": {
         "id": "RegionListModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "RegionModel"
               }
            }
         }
      },
      "VhdOptionModel": {
         "id": "VhdOptionModel",
         "description": null,
         "notes": null,
         "required": [
            "key",
            "value",
            "enabled"
         ],
         "properties": {
            "key": {
               "type": "string"
            },
            "value": {
               "type": "string"
            },
            "enabled": {
               "type": "boolean"
            }
         }
      },
      "VhdListModel": {
         "id": "VhdListModel",
         "description": null,
         "notes": null,
         "properties": {
            "options": {
               "type": "array",
               "items": {
                  "$ref": null
               }
            }
         }
      },
      "ImageModel": {
         "id": "ImageModel",
         "description": null,
         "notes": null,
         "properties": {
            "AzureStorageAccount": {
               "type": "string"
            },
            "VhdUrl": {
               "type": "string"
            },
            "VerificationTransactionId": {
               "type": "string"
            },
            "State": {
               "type": "string"
            },
            "VerificationVhdUri": {
               "type": "string"
            },
            "ImageName": {
               "type": "string"
            },
            "ImageVersion": {
               "type": "integer"
            },
            "AzureResourceGroup": {
               "type": "string"
            },
            "VerifiedVhdUrl": {
               "type": "string"
            },
            "Id": {
               "type": "string"
            }
         }
      },
      "CatalogWarningModel": {
         "id": "CatalogWarningModel",
         "description": null,
         "notes": null,
         "properties": {
            "WarningMessage": {
               "type": "string"
            },
            "Type": {
               "type": "string"
            },
            "IsDismissible": {
               "type": "boolean"
            }
         }
      },
      "MTCustomerModel": {
         "id": "MTCustomerModel",
         "description": null,
         "notes": null,
         "properties": {
            "controlPlaneId": {
               "type": "string"
            },
            "customerId": {
               "type": "string"
            }
         }
      },
      "CatalogModel": {
         "id": "CatalogModel",
         "description": null,
         "notes": null,
         "properties": {
            "VNetName": {
               "type": "string"
            },
            "Region": {
               "type": "string"
            },
            "State": {
               "type": "string"
            },
            "Name": {
               "type": "string"
            },
            "DomainServiceAccount": {
               "type": "string"
            },
            "ImageId": {
               "type": "string"
            },
            "TemplateImageName": {
               "type": "string"
            },
            "TaskCompletionPercentage": {
               "type": "integer"
            },
            "StoreFrontUrl": {
               "type": "string"
            },
            "ErrorDetails": {
               "type": "string"
            },
            "StatusMessage": {
               "type": "string"
            },
            "SubState": {
               "type": "string"
            },
            "TransactionId": {
               "type": "string"
            },
            "Subnet": {
               "type": "string"
            },
            "LastModifiedTime": {
               "type": "string"
            },
            "DomainName": {
               "type": "string"
            },
            "Id": {
               "type": "string"
            },
            "Warnings": {
               "type": "array",
               "items": {
                  "$ref": "CatalogWarningModel"
               }
            },
            "SubscriptionName": {
               "type": "string"
            },
            "ResourceGroup": {
               "type": "string"
            },
            "MultitenantCustomer": {
               "type": "array",
               "items": {
                  "$ref": "MTCustomerModel"
               }
            },
            "ResourceLocationId": {
               "type": "string"
            }
         }
      },
      "EnumeratedAdminModel": {
         "id": "EnumeratedAdminModel",
         "description": null,
         "notes": null,
         "properties": {
            "customerId": {
               "type": "string"
            },
            "virtualSiteId": {
               "type": "string"
            },
            "brokerPrefix": {
               "type": "string"
            }
         }
      },
      "EnumerateAdminsModel": {
         "id": "EnumerateAdminsModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "EnumeratedAdminModel"
               }
            }
         }
      },
      "DomainModel": {
         "id": "DomainModel",
         "description": null,
         "notes": null,
         "properties": {
            "Id": {
               "type": "string"
            },
            "DomainName": {
               "type": "string"
            },
            "ServiceAccount": {
               "type": "string"
            }
         }
      },
      "ResourceLocationModel": {
         "id": "ResourceLocationModel",
         "description": null,
         "notes": null,
         "properties": {
            "AzureConnectorsAvailabilitySet": {
               "type": "string"
            },
            "AzureVNetRegion": {
               "type": "string"
            },
            "CwcResourceLocationPrefix": {
               "type": "string"
            },
            "AzureVaultUrl": {
               "type": "string"
            },
            "Id": {
               "type": "string"
            }
         }
      },
      "FeatureModel": {
         "id": "FeatureModel",
         "description": null,
         "notes": null,
         "properties": {
            "Id": {
               "type": "string"
            },
            "Enabled": {
               "type": "boolean"
            }
         }
      },
      "NetscalerGatewayModel": {
         "id": "NetscalerGatewayModel",
         "description": null,
         "notes": null,
         "properties": {
            "Enabled": {
               "type": "boolean"
            },
            "SessionReliability": {
               "type": "boolean"
            },
            "CloudHosted": {
               "type": "boolean"
            }
         }
      },
      "XdStateModel": {
         "id": "XdStateModel",
         "description": null,
         "notes": null,
         "properties": {
            "NetscalerGateway": {
               "type": "NetscalerGatewayModel"
            },
            "xdFullAdminUsername": {
               "type": "string"
            },
            "xdFullAdminPassword": {
               "type": "string"
            },
            "studioUserUsername": {
               "type": "string"
            },
            "StoreFront": {
               "type": "string"
            },
            "studioUserPassword": {
               "type": "string"
            }
         }
      },
      "StorefrontControllerModel": {
         "id": "StorefrontControllerModel",
         "description": null,
         "notes": null,
         "properties": {
            "restrictPoPs": {
               "type": "string"
            },
            "hosts": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "product": {
               "type": "string"
            },
            "type": {
               "type": "string"
            },
            "guid": {
               "type": "string"
            }
         }
      },
      "StorefrontModel": {
         "id": "StorefrontModel",
         "description": null,
         "notes": null,
         "properties": {
            "storeId": {
               "type": "string"
            },
            "shardId": {
               "type": "string"
            },
            "externalHostname": {
               "type": "string"
            },
            "controllers": {
               "type": "array",
               "items": {
                  "$ref": "StorefrontControllerModel"
               }
            }
         }
      },
      "GetAdminModel": {
         "id": "GetAdminModel",
         "description": null,
         "notes": null,
         "properties": {
            "customerId": {
               "type": "string"
            },
            "virtualSiteId": {
               "type": "string"
            },
            "numberOfCatalogs": {
               "type": "integer"
            },
            "numberOfSubscriptions": {
               "type": "integer"
            },
            "numberOfImages": {
               "type": "integer"
            },
            "catalogs": {
               "type": "array",
               "items": {
                  "$ref": "CatalogModel"
               }
            },
            "pool": {
               "type": "string"
            },
            "whitelist": {
               "type": "array",
               "items": {
                  "$ref": "MTCustomerModel"
               }
            },
            "images": {
               "type": "array",
               "items": {
                  "$ref": "ImageModel"
               }
            },
            "domains": {
               "type": "array",
               "items": {
                  "$ref": "DomainModel"
               }
            },
            "resourceLocations": {
               "type": "array",
               "items": {
                  "$ref": "ResourceLocationModel"
               }
            },
            "edition": {
               "type": "string"
            },
            "features": {
               "type": "array",
               "items": {
                  "$ref": "FeatureModel"
               }
            },
            "xdstate": {
               "type": "XdStateModel"
            },
            "brokerPrefix": {
               "type": "string"
            },
            "storefront": {
               "type": "StorefrontModel"
            },
            "orgId": {
               "type": "string"
            },
            "serviceType": {
               "type": "string"
            },
            "internal": {
               "type": "string"
            }
         }
      },
      "XdControllerSimpleUi": {
         "id": "XdControllerSimpleUi",
         "description": null,
         "notes": null,
         "properties": {
            "customerId": {
               "type": "string"
            },
            "virtualSiteId": {
               "type": "string"
            },
            "numberOfImages": {
               "type": "string"
            },
            "numberOfCatalogs": {
               "type": "string"
            },
            "numberOfSubscriptions": {
               "type": "string"
            },
            "brokerPrefix": {
               "type": "string"
            },
            "catalogs": {
               "type": "string"
            },
            "images": {
               "type": "string"
            },
            "domains": {
               "type": "string"
            },
            "resourcelocations": {
               "type": "string"
            }
         }
      },
      "XdControllerModel": {
         "id": "XdControllerModel",
         "description": null,
         "notes": null,
         "properties": {
            "customer_id": {
               "type": "string"
            },
            "control_plane_id": {
               "type": "string"
            },
            "state": {
               "type": "string"
            },
            "ddcIp": {
               "type": "string"
            }
         }
      },
      "XDControllerPutBodyModel": {
         "id": "XDControllerPutBodyModel",
         "description": null,
         "notes": null,
         "required": [
            "operation_type",
            "operation_value"
         ],
         "properties": {
            "operation_type": {
               "type": "string"
            },
            "operation_value": {
               "type": "string"
            }
         }
      },
      "BatchXDControllersUpgradeModel": {
         "id": "BatchXDControllersUpgradeModel",
         "description": null,
         "notes": null,
         "properties": {
            "customer_ids": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "XDControllerLogsUrlModel": {
         "id": "XDControllerLogsUrlModel",
         "description": null,
         "notes": null,
         "properties": {
            "url": {
               "type": "string"
            },
            "Authorization": {
               "type": "string"
            }
         }
      },
      "XDControllerPropertiesModel": {
         "id": "XDControllerPropertiesModel",
         "description": null,
         "notes": null,
         "required": [
            "customerId"
         ],
         "properties": {
            "awsStatus": {
               "type": "string"
            },
            "stackId": {
               "type": "string"
            },
            "state": {
               "type": "string"
            },
            "previousState": {
               "type": "string"
            }
         }
      },
      "XdControllerPatchInner": {
         "id": "XdControllerPatchInner",
         "description": null,
         "notes": null,
         "properties": {
            "keyName": {
               "type": "string"
            }
         }
      },
      "XdControllerPatchAdd": {
         "id": "XdControllerPatchAdd",
         "description": null,
         "notes": null,
         "properties": {
            "ptah": {
               "type": "XdControllerPatchInner"
            },
            "provisioning": {
               "type": "XdControllerPatchInner"
            }
         }
      },
      "XdControllerPatchUpdate": {
         "id": "XdControllerPatchUpdate",
         "description": null,
         "notes": null,
         "properties": {
            "ptah": {
               "type": "XdControllerPatchInner"
            },
            "provisioning": {
               "type": "XdControllerPatchInner"
            }
         }
      },
      "XdControllerPatchDelete": {
         "id": "XdControllerPatchDelete",
         "description": null,
         "notes": null,
         "properties": {
            "ptah": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            },
            "provisioning": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "XDControllerPatchModel": {
         "id": "XDControllerPatchModel",
         "description": null,
         "notes": null,
         "properties": {
            "add": {
               "type": "array",
               "items": {
                  "$ref": "XdControllerPatchAdd"
               }
            },
            "update": {
               "type": "array",
               "items": {
                  "$ref": "XdControllerPatchUpdate"
               }
            },
            "delete": {
               "type": "array",
               "items": {
                  "$ref": "XdControllerPatchDelete"
               }
            }
         }
      },
      "StartStopRequestModel": {
         "id": "StartStopRequestModel",
         "description": null,
         "notes": null,
         "properties": {
            "ddc_hostnames": {
               "type": "array",
               "items": {
                  "$ref": "string"
               }
            }
         }
      },
      "XdControllerCreateOrUpgradeModel": {
         "id": "XdControllerCreateOrUpgradeModel",
         "description": null,
         "notes": null,
         "required": [
            "build_name"
         ],
         "properties": {
            "build_name": {
               "type": "string"
            },
            "upgrade": {
               "type": "boolean"
            },
            "force": {
               "type": "boolean"
            },
            "tryLiveSchemaUpgrade": {
               "type": "boolean"
            },
            "mockFailureInStage": {
               "type": "string"
            },
            "containerState": {
               "type": "array",
               "items": {
                  "$ref": "ContainerStateModel"
               }
            }
         }
      },
      "XdControllerPowerStateModel": {
         "id": "XdControllerPowerStateModel",
         "description": null,
         "notes": null,
         "properties": {
            "ddc_hostname": {
               "type": "string"
            },
            "power_state": {
               "type": "string"
            }
         }
      },
      "NestedPowerStateModel": {
         "id": "NestedPowerStateModel",
         "description": null,
         "notes": null,
         "properties": {
            "items": {
               "type": "array",
               "items": {
                  "$ref": "XdControllerPowerStateModel"
               }
            },
            "count": {
               "type": "integer"
            }
         }
      },
      "XDControllerListModel": {
         "id": "XDControllerListModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "XdControllerModel"
               }
            }
         }
      },
      "XdControllerFilterModel": {
         "id": "XdControllerFilterModel",
         "description": null,
         "notes": null,
         "properties": {
            "customerId": {
               "type": "string"
            },
            "controlPlaneId": {
               "type": "string"
            },
            "state": {
               "type": "string"
            },
            "ddcs": {
               "type": "string"
            },
            "ddcIp": {
               "type": "string"
            },
            "currentDdcCount": {
               "type": "string"
            },
            "halted": {
               "type": "string"
            },
            "error": {
               "type": "string"
            },
            "existingStacks": {
               "type": "string"
            },
            "buildName": {
               "type": "string"
            },
            "lastTransitionTime": {
               "type": "string"
            },
            "service_type": {
               "type": "string"
            },
            "edition": {
               "type": "string"
            },
            "internal": {
               "type": "string"
            },
            "canary": {
               "type": "string"
            }
         }
      },
      "XDControllerFilteredListModel": {
         "id": "XDControllerFilteredListModel",
         "description": null,
         "notes": null,
         "properties": {
            "count": {
               "type": "integer"
            },
            "items": {
               "type": "array",
               "items": {
                  "$ref": "XdControllerFilterModel"
               }
            }
         }
      }
   }
}